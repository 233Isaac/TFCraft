--- ../src_base/minecraft/net/minecraft/src/forge/PacketHandlerClient.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft/net/minecraft/src/forge/PacketHandlerClient.java	0000-00-00 00:00:00.000000000 -0000
@@ -20,12 +20,13 @@
     public void onPacketData(NetworkManager network, String channel, byte[] bytes)
     {
         DataInputStream data = new DataInputStream(new ByteArrayInputStream(bytes));
+
         try
         {
             ForgePacket pkt = null;
             NetClientHandler net = (NetClientHandler)network.getNetHandler();
-
             int packetID = data.read();
+
             switch (packetID)
             {
                 case ForgePacket.SPAWN:
@@ -73,7 +74,9 @@
         {
             System.out.println("S->C: " + packet.toString(true));
         }
+
         Class cls = MinecraftForge.getEntityClass(packet.modID, packet.typeID);
+
         if (cls == null)
         {
             System.out.println("Could not find entity info for " + Integer.toHexString(packet.modID) + " : " + packet.typeID);
@@ -86,9 +89,11 @@
         float  yaw     = (float)(packet.yaw * 360) / 256.0F;
         float  pitch   = (float)(packet.pitch * 360) / 256.0F;
         float  yawHead = (float)(packet.yawHead * 360) / 256.0F;
+
         try
         {
             Entity entity = (Entity)(cls.getConstructor(World.class).newInstance(world));
+
             if (entity instanceof IThrowableEntity)
             {
                 Minecraft mc = ModLoader.getMinecraftInstance();
@@ -99,11 +104,12 @@
             entity.serverPosX = packet.posX;
             entity.serverPosY = packet.posY;
             entity.serverPosZ = packet.posZ;
-
             Entity parts[] = entity.getParts();
+
             if (parts != null)
             {
                 int i = packet.entityID - entity.entityId;
+
                 for (int j = 0; j < parts.length; j++)
                 {
                     parts[j].entityId += i;
@@ -112,12 +118,12 @@
 
             entity.entityId = packet.entityID;
             entity.setPositionAndRotation(posX, posY, posZ, yaw, pitch);
-            
+
             if (entity instanceof EntityLiving)
             {
-            	((EntityLiving)entity).rotationYawHead = yawHead;
+                ((EntityLiving)entity).rotationYawHead = yawHead;
             }
-            
+
             if (packet.metadata != null)
             {
                 entity.getDataWatcher().updateWatchedObjectsFromList((List)packet.metadata);
@@ -147,10 +153,10 @@
      * Sets up the list of ID to mod mappings.
      * TODO; Make it display an error, and prompt if the user wishes to continue anyways
      * if it detects that the server does not have a corresponding mod to one it has installed.
-     * 
+     *
      * Sends a list of all loaded mods to the server.
      * For now, it it simple a String[] of mod.toString()
-     * 
+     *
      * @param network The network connection to send the packet on.
      * @param packet The Server to client packet containing a list of NetworkMod ID's
      */
@@ -163,6 +169,7 @@
 
         ForgeHooks.networkMods.clear();
         NetworkMod[] mods = MinecraftForge.getNetworkMods();
+
         for (NetworkMod mod : mods)
         {
             for (Entry<Integer, String> entry : packet.ModIDs.entrySet())
@@ -173,7 +180,9 @@
                 }
             }
         }
+
         ArrayList<NetworkMod> missing = new ArrayList<NetworkMod>();
+
         for (NetworkMod mod : mods)
         {
             if (MinecraftForge.getModID(mod) == -1 && mod.serverSideRequired())
@@ -181,16 +190,19 @@
                 missing.add(mod);
             }
         }
+
         //TODO: Display error/confirmation screen
-        
         PacketModList pkt = new PacketModList(false);
         pkt.Mods = new String[ModLoader.getLoadedMods().size()];
         int x = 0;
+
         for (BaseMod mod : (List<BaseMod>)ModLoader.getLoadedMods())
         {
             pkt.Mods[x++] = mod.toString();
         }
+
         net.addToSendQueue(pkt.getPacket());
+
         if (DEBUG)
         {
             System.out.println("C->S: " + pkt.toString(true));
@@ -210,6 +222,7 @@
         {
             System.out.println("S->C: " + pkt.toString(true));
         }
+
         net.disconnect();
         Minecraft mc = ModLoader.getMinecraftInstance();
         mc.changeWorld1(null);
@@ -227,7 +240,9 @@
         {
             System.out.println("S->C: " + pkt.toString(true));
         }
+
         NetworkMod mod = MinecraftForge.getModByID(pkt.ModID);
+
         if (mod != null)
         {
             EntityPlayerSP player = (EntityPlayerSP)ModLoader.getMinecraftInstance().thePlayer;
@@ -237,7 +252,7 @@
     }
 
     @Override
-    public void sendPacket(NetworkManager network, Packet packet) 
+    public void sendPacket(NetworkManager network, Packet packet)
     {
         NetClientHandler net = (NetClientHandler)network.getNetHandler();
         net.addToSendQueue(packet);
