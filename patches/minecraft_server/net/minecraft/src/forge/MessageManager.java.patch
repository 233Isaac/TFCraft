--- ../src_base/minecraft_server/net/minecraft/src/forge/MessageManager.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/forge/MessageManager.java	0000-00-00 00:00:00.000000000 -0000
@@ -18,6 +18,7 @@
         {
             instance = new MessageManager();
         }
+
         return instance;
     }
 
@@ -88,10 +89,12 @@
             {
                 channels.add(channel);
             }
+
             if (!handlers.contains(handler))
             {
                 handlers.add(handler);
             }
+
             return ret;
         }
 
@@ -113,6 +116,7 @@
             if (handlers != null && handlers.contains(handler))
             {
                 handlers.remove(handler);
+
                 if (handlers.size() == 0)
                 {
                     ret = true;
@@ -123,6 +127,7 @@
             if (channels != null && channels.contains(channel))
             {
                 channels.remove(channel);
+
                 if (handlers.size() == 0)
                 {
                     handlerToChannels.remove(handler);
@@ -143,6 +148,7 @@
         public String[] unregisterHandler(IPacketHandler handler)
         {
             ArrayList<String> tmp = handlerToChannels.get(handler);
+
             if (tmp != null)
             {
                 String[] channels = tmp.toArray(new String[0]);
@@ -155,8 +161,10 @@
                         tmp.add(channel);
                     }
                 }
+
                 return tmp.toArray(new String[0]);
             }
+
             return new String[0];
         }
 
@@ -174,6 +182,7 @@
             {
                 ret[x++] = value;
             }
+
             return ret;
         }
 
@@ -186,10 +195,12 @@
         public IPacketHandler[] getChannelHandlers(String channel)
         {
             ArrayList<IPacketHandler> handlers = channelToHandlers.get(channel);
+
             if (handlers != null)
             {
                 return handlers.toArray(new IPacketHandler[0]);
             }
+
             return new IPacketHandler[0];
         }
 
@@ -242,11 +253,13 @@
     public ConnectionInstance getConnection(NetworkManager manager)
     {
         ConnectionInstance ret = connections.get(manager);
+
         if (ret == null)
         {
             ret = new ConnectionInstance(manager);
             connections.put(manager, ret);
         }
+
         return ret;
     }
 
@@ -267,6 +280,7 @@
             connections.remove(manager);
             return ret;
         }
+
         return new String[0];
     }
 
@@ -303,6 +317,7 @@
             ConnectionInstance con = getConnection(manager);
             return con.unregisterChannel(handler, channel);
         }
+
         return false;
     }
 
@@ -322,6 +337,7 @@
             ConnectionInstance con = getConnection(manager);
             return con.unregisterHandler(handler);
         }
+
         return new String[0];
     }
 
@@ -338,6 +354,7 @@
             ConnectionInstance con = getConnection(manager);
             return con.getRegisteredChannels();
         }
+
         return new String[0];
     }
 
@@ -355,6 +372,7 @@
             ConnectionInstance con = getConnection(manager);
             return con.getChannelHandlers(channel);
         }
+
         return new IPacketHandler[0];
     }
 
@@ -401,6 +419,7 @@
             ConnectionInstance con = getConnection(manager);
             return con.isActiveChannel(channel);
         }
+
         return false;
     }
 
@@ -410,7 +429,7 @@
         {
             data = new byte[0];
         }
-        
+
         if (channel.equals("Forge"))
         {
             if (ForgeHooks.getPacketHandler() != null)
@@ -426,6 +445,7 @@
             ConnectionInstance con = getConnection(manager);
             IPacketHandler[] handlers = con.getChannelHandlers(channel);
             byte[] tmpData = new byte[data.length];
+
             for (IPacketHandler handler : handlers)
             {
                 System.arraycopy(data, 0, tmpData, 0, data.length);
