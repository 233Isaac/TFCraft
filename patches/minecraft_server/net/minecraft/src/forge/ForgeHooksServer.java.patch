--- ../src_base/minecraft_server/net/minecraft/src/forge/ForgeHooksServer.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/forge/ForgeHooksServer.java	0000-00-00 00:00:00.000000000 -0000
@@ -20,11 +20,13 @@
     public static boolean OnTrackEntity(EntityTracker tracker, Entity entity)
     {
         EntityTrackerInfo info = MinecraftForge.getEntityTrackerInfo(entity, true);
+
         if (info != null)
         {
             tracker.trackEntity(entity, info.Range, info.UpdateFrequency, info.SendVelocityInfo);
             return true;
         }
+
         return false;
     }
 
@@ -32,41 +34,49 @@
     {
         NetworkMod[] list = MinecraftForge.getNetworkMods();
         PacketModList pkt = new PacketModList(true);
-        
+
         for (NetworkMod mod : list)
         {
             pkt.ModIDs.put(MinecraftForge.getModID(mod), mod.toString());
         }
-        
+
         ((NetServerHandler)net.getNetHandler()).sendPacket(pkt.getPacket());
+
         if (((PacketHandlerServer)ForgeHooks.getPacketHandler()).DEBUG)
         {
             System.out.println("S->C: " + pkt.toString(true));
         }
     }
-    
+
     public static void handleLoginPacket(Packet1Login pktLogin, NetServerHandler net, NetworkManager manager)
     {
         init();
+
         if (pktLogin.serverMode == ForgePacket.FORGE_ID)
         {
-            ForgeHooks.onLogin(manager, pktLogin);  
-            
+            ForgeHooks.onLogin(manager, pktLogin);
             String[] channels = MessageManager.getInstance().getRegisteredChannels(manager);
             StringBuilder tmp = new StringBuilder();
             tmp.append("Forge");
-            for(String channel : channels)
+
+            for (String channel : channels)
             {
                 tmp.append("\0");
                 tmp.append(channel);
             }
-            Packet250CustomPayload pkt = new Packet250CustomPayload(); 
+
+            Packet250CustomPayload pkt = new Packet250CustomPayload();
             pkt.channel = "REGISTER";
-            try {
+
+            try
+            {
                 pkt.data = tmp.toString().getBytes("UTF8");
-            } catch (UnsupportedEncodingException e) {
+            }
+            catch (UnsupportedEncodingException e)
+            {
                 e.printStackTrace();
             }
+
             pkt.length = pkt.data.length;
             net.sendPacket(pkt);
             ForgeHooksServer.sendModListRequest(manager);
@@ -77,7 +87,6 @@
         }
     }
 
-
     private static boolean hasInit = false;
     public static void init()
     {
@@ -85,6 +94,7 @@
         {
             return;
         }
+
         hasInit = true;
         ForgeHooks.setPacketHandler(new PacketHandlerServer());
     }
