--- ../src_base/minecraft_server/net/minecraft/src/forge/PacketHandlerServer.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/forge/PacketHandlerServer.java	0000-00-00 00:00:00.000000000 -0000
@@ -28,6 +28,7 @@
         try
         {
             int packetID = data.read();
+
             switch (packetID)
             {
                 case ForgePacket.MODLIST:
@@ -50,11 +51,13 @@
         {
             System.out.println("C->S: " + pkt.toString(true));
         }
+
         if (pkt.Length < 0)
         {
             net.kickPlayer("Invalid mod list response, Size: " + pkt.Length);
             return;
         }
+
         if (pkt.Mods.length == 0)
         {
             ModLoader.getLogger().log(Level.INFO, net.getUsername() + " joined with no mods");
@@ -65,16 +68,18 @@
         }
 
         //TODO: Write a 'banned mods' system and do the checks here
-
         NetworkMod[] serverMods = MinecraftForge.getNetworkMods();
         ArrayList<NetworkMod> missing = new ArrayList<NetworkMod>();
+
         for (NetworkMod mod : serverMods)
         {
             if (!mod.clientSideRequired())
             {
                 continue;
             }
+
             boolean found = false;
+
             for (String modName : pkt.Mods)
             {
                 if (modName.equals(mod.toString()))
@@ -83,11 +88,13 @@
                     break;
                 }
             }
+
             if (!found)
             {
                 missing.add(mod);
             }
         }
+
         if (missing.size() > 0)
         {
             doMissingMods(net, missing);
@@ -107,18 +114,21 @@
         PacketMissingMods pkt = new PacketMissingMods(true);
         pkt.Mods = new String[list.size()];
         int x = 0;
+
         for (NetworkMod mod : list)
         {
             pkt.Mods[x++] = mod.toString();
         }
+
         if (DEBUG)
         {
             System.out.println("S->C: " + pkt.toString(true));
         }
+
         net.sendPacket(pkt.getPacket());
         disconnectUser(net);
     }
-    
+
     /**
      * Disconnects the player just like kicking them, just without the kick message.
      * @param net The network handler
@@ -132,38 +142,35 @@
         mc.configManager.playerLoggedOut(net.getPlayerEntity());
         net.connectionClosed = true;
     }
-    
+
     private void finishLogin(NetServerHandler net)
     {
         EntityPlayerMP player = net.getPlayerEntity();
         WorldServer world = net.mcServer.getWorldManager(player.dimension);
         ChunkCoordinates spawn = world.getSpawnPoint();
-        
-        net.sendPacket(new Packet1Login("", player.entityId, world.getWorldInfo().getTerrainType(), 
-                player.itemInWorldManager.getGameType(), world.worldProvider.worldType, 
-                (byte)world.difficultySetting,          (byte)world.getHeight(), 
+        net.sendPacket(new Packet1Login("", player.entityId, world.getWorldInfo().getTerrainType(),
+                player.itemInWorldManager.getGameType(), world.worldProvider.worldType,
+                (byte)world.difficultySetting, (byte)world.getHeight(),
                 (byte)net.mcServer.configManager.getMaxPlayers()));
-        
         net.sendPacket(new Packet6SpawnPosition(spawn.posX, spawn.posY, spawn.posZ));
         net.sendPacket(new Packet202PlayerAbilities(player.capabilities));
         net.mcServer.configManager.updateTimeAndWeather(player, world);
         net.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat("\u00a7e" + player.username + " joined the game."));
         net.mcServer.configManager.playerLoggedIn(player);
-        
         net.teleportTo(player.posX, player.posY, player.posZ, player.rotationYaw, player.rotationPitch);
         net.sendPacket(new Packet4UpdateTime(world.getWorldTime()));
-        
+
         for (Object efx : player.getActivePotionEffects())
         {
             net.sendPacket(new Packet41EntityEffect(player.entityId, (PotionEffect)efx));
         }
-        
+
         player.func_20057_k();
         FMLServerHandler.instance().announceLogin(player);
     }
 
     @Override
-    public void sendPacket(NetworkManager network, Packet packet) 
+    public void sendPacket(NetworkManager network, Packet packet)
     {
         NetServerHandler net = (NetServerHandler)network.getNetHandler();
         net.sendPacket(packet);
