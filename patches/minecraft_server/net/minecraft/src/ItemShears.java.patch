--- ../src_base/minecraft_server/net/minecraft/src/ItemShears.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/ItemShears.java	0000-00-00 00:00:00.000000000 -0000
@@ -41,7 +41,7 @@
     {
         return par2Block.blockID != Block.web.blockID && par2Block.blockID != Block.leaves.blockID ? (par2Block.blockID == Block.cloth.blockID ? 5.0F : super.getStrVsBlock(par1ItemStack, par2Block)) : 15.0F;
     }
-    
+
     @Override
     public void useItemOnEntity(ItemStack itemstack, EntityLiving entity)
     {
@@ -49,41 +49,49 @@
         {
             return;
         }
+
         if (entity instanceof IShearable)
         {
             IShearable target = (IShearable)entity;
+
             if (target.isShearable(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ))
             {
                 ArrayList<ItemStack> drops = target.onSheared(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ,
                         EnchantmentHelper.getEnchantmentLevel(Enchantment.fortune.effectId, itemstack));
-                for(ItemStack stack : drops)
+
+                for (ItemStack stack : drops)
                 {
                     EntityItem ent = entity.entityDropItem(stack, 1.0F);
                     ent.motionY += entity.rand.nextFloat() * 0.05F;
                     ent.motionX += (entity.rand.nextFloat() - entity.rand.nextFloat()) * 0.1F;
                     ent.motionZ += (entity.rand.nextFloat() - entity.rand.nextFloat()) * 0.1F;
                 }
+
                 itemstack.damageItem(1, entity);
             }
         }
     }
-    
+
     @Override
-    public boolean onBlockStartBreak(ItemStack itemstack, int X, int Y, int Z, EntityPlayer player) 
+    public boolean onBlockStartBreak(ItemStack itemstack, int X, int Y, int Z, EntityPlayer player)
     {
         if (player.worldObj.isRemote)
         {
             return false;
         }
+
         int id = player.worldObj.getBlockId(X, Y, Z);
+
         if (Block.blocksList[id] != null && Block.blocksList[id] instanceof IShearable)
         {
             IShearable target = (IShearable)Block.blocksList[id];
+
             if (target.isShearable(itemstack, player.worldObj, X, Y, Z))
             {
                 ArrayList<ItemStack> drops = target.onSheared(itemstack, player.worldObj, X, Y, Z,
                         EnchantmentHelper.getEnchantmentLevel(Enchantment.fortune.effectId, itemstack));
-                for(ItemStack stack : drops)
+
+                for (ItemStack stack : drops)
                 {
                     float f = 0.7F;
                     double d  = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
@@ -93,10 +101,12 @@
                     entityitem.delayBeforeCanPickup = 10;
                     player.worldObj.spawnEntityInWorld(entityitem);
                 }
+
                 itemstack.damageItem(1, player);
                 player.addStat(StatList.mineBlockStatArray[id], 1);
             }
         }
+
         return false;
     }
 }
