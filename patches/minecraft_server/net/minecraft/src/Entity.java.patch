--- ../src_base/minecraft_server/net/minecraft/src/Entity.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/Entity.java	0000-00-00 00:00:00.000000000 -0000
@@ -167,7 +167,7 @@
 
     /** Forge: Used to store custom data for each entity. */
     private NBTTagCompound customEntityData;
-    
+
     public Entity(World par1World)
     {
         this.entityId = nextEntityID++;
@@ -216,13 +216,14 @@
      */
     public NBTTagCompound getEntityData()
     {
-    	if (customEntityData == null)
-    	{
-    		customEntityData = new NBTTagCompound();
-    	}
-    	return customEntityData;
+        if (customEntityData == null)
+        {
+            customEntityData = new NBTTagCompound();
+        }
+
+        return customEntityData;
     }
-    
+
     /**
      * Used in model rendering to determine if the entity riding this entity should be in the 'sitting' position.
      * @return false to prevent an entity that is mounted to this entity from displaying the 'sitting' animation.
@@ -231,7 +232,7 @@
     {
         return true;
     }
-    
+
     public DataWatcher getDataWatcher()
     {
         return this.dataWatcher;
@@ -1241,10 +1242,12 @@
         par1NBTTagCompound.setShort("Fire", (short)this.fire);
         par1NBTTagCompound.setShort("Air", (short)this.getAir());
         par1NBTTagCompound.setBoolean("OnGround", this.onGround);
+
         if (customEntityData != null)
         {
             par1NBTTagCompound.setCompoundTag("ForgeData", customEntityData);
         }
+
         this.writeEntityToNBT(par1NBTTagCompound);
     }
 
@@ -1286,10 +1289,12 @@
         this.onGround = par1NBTTagCompound.getBoolean("OnGround");
         this.setPosition(this.posX, this.posY, this.posZ);
         this.setRotation(this.rotationYaw, this.rotationPitch);
+
         if (par1NBTTagCompound.hasKey("ForgeData"))
         {
             customEntityData = par1NBTTagCompound.getCompoundTag("ForgeData");
         }
+
         this.readEntityFromNBT(par1NBTTagCompound);
     }
 
@@ -1831,8 +1836,9 @@
     {
         return true;
     }
-    
-    public static int getNextId() {
-      return nextEntityID++;
+
+    public static int getNextId()
+    {
+        return nextEntityID++;
     }
 }
