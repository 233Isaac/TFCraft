--- ../src_base/minecraft_server/net/minecraft/src/BlockFire.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/BlockFire.java	0000-00-00 00:00:00.000000000 -0000
@@ -212,11 +212,12 @@
     {
         tryToCatchBlockOnFire(par1World, par2, par3, par4, par5, par6Random, par7, 0);
     }
-    
+
     private void tryToCatchBlockOnFire(World par1World, int par2, int par3, int par4, int par5, Random par6Random, int par7, int face)
     {
         int var8 = 0;
         Block block = Block.blocksList[par1World.getBlockId(par2, par3, par4)];
+
         if (block != null)
         {
             var8 = block.getFlammability(par1World, par2, par3, par4, par1World.getBlockMetadata(par2, par3, par4), face);
@@ -255,11 +256,11 @@
     private boolean canNeighborBurn(World par1World, int par2, int par3, int par4)
     {
         return this.canBlockCatchFire(par1World, par2 + 1, par3, par4, 4) ||
-               this.canBlockCatchFire(par1World, par2 - 1, par3, par4, 5) ||
-               this.canBlockCatchFire(par1World, par2, par3 - 1, par4, 1) ||
-               this.canBlockCatchFire(par1World, par2, par3 + 1, par4, 0) ||
-               this.canBlockCatchFire(par1World, par2, par3, par4 - 1, 3) ||
-               this.canBlockCatchFire(par1World, par2, par3, par4 + 1, 2);
+                this.canBlockCatchFire(par1World, par2 - 1, par3, par4, 5) ||
+                this.canBlockCatchFire(par1World, par2, par3 - 1, par4, 1) ||
+                this.canBlockCatchFire(par1World, par2, par3 + 1, par4, 0) ||
+                this.canBlockCatchFire(par1World, par2, par3, par4 - 1, 3) ||
+                this.canBlockCatchFire(par1World, par2, par3, par4 + 1, 2);
     }
 
     /**
@@ -283,7 +284,7 @@
             var6 = this.getChanceToEncourageFire(par1World, par2, par3, par4 + 1, var6, 2);
             return var6;
         }
-    }  
+    }
 
     /**
      * Returns if this block is collidable (only used by Fire). Args: x, y, z
@@ -352,10 +353,10 @@
             }
         }
     }
-        
+
     /**
      * Side sensitive version that calls the block function.
-     * 
+     *
      * @param world The current world
      * @param x X Position
      * @param y Y Position
@@ -366,16 +367,18 @@
     public boolean canBlockCatchFire(IBlockAccess world, int x, int y, int z, int face)
     {
         Block block = Block.blocksList[world.getBlockId(x, y, z)];
+
         if (block != null)
         {
             return block.isFlammable(world, x, y, z, world.getBlockMetadata(x, y, z), face);
         }
+
         return false;
     }
-    
+
     /**
      * Side sensitive version that calls the block function.
-     * 
+     *
      * @param world The current world
      * @param x X Position
      * @param y Y Position
@@ -388,10 +391,12 @@
     {
         int newChance = 0;
         Block block = Block.blocksList[world.getBlockId(x, y, z)];
+
         if (block != null)
         {
             newChance = block.getFireSpreadSpeed(world, x, y, z, world.getBlockMetadata(x, y, z), face);
         }
+
         return (newChance > oldChance ? newChance : oldChance);
-    }  
+    }
 }
