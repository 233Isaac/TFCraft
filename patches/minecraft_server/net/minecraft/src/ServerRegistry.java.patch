--- ../src_base/minecraft_server/net/minecraft/src/ServerRegistry.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/ServerRegistry.java	0000-00-00 00:00:00.000000000 -0000
@@ -5,7 +5,6 @@
 
 public class ServerRegistry implements IMinecraftRegistry
 {
-
     @Override
     public void addRecipe(ItemStack output, Object... params)
     {
@@ -77,7 +76,7 @@
         {
             @SuppressWarnings("unchecked")
             List<SpawnListEntry> spawns = biome.getSpawnableList(typeOfCreature);
-    
+
             for (SpawnListEntry entry : spawns)
             {
                 //Adjusting an existing spawn entry
@@ -89,7 +88,7 @@
                     break;
                 }
             }
-    
+
             spawns.add(new SpawnListEntry(entityClass, weightedProb, min, max));
         }
     }
@@ -99,7 +98,7 @@
     public void addSpawn(String entityName, int weightedProb, int min, int max, EnumCreatureType spawnList, BiomeGenBase... biomes)
     {
         Class <? extends Entity > entityClazz = EntityList.getEntityToClassMapping().get(entityName);
-    
+
         if (EntityLiving.class.isAssignableFrom(entityClazz))
         {
             addSpawn((Class <? extends EntityLiving >) entityClazz, weightedProb, min, max, spawnList, biomes);
@@ -119,7 +118,7 @@
         {
             @SuppressWarnings("unchecked")
             List<SpawnListEntry> spawns = biome.getSpawnableList(typeOfCreature);
-    
+
             for (SpawnListEntry entry : Collections.unmodifiableList(spawns))
             {
                 if (entry.entityClass == entityClass)
@@ -135,11 +134,10 @@
     public void removeSpawn(String entityName, EnumCreatureType spawnList, BiomeGenBase... biomes)
     {
         Class <? extends Entity > entityClazz = EntityList.getEntityToClassMapping().get(entityName);
-    
+
         if (EntityLiving.class.isAssignableFrom(entityClazz))
         {
             removeSpawn((Class <? extends EntityLiving >) entityClazz, spawnList, biomes);
         }
     }
-
 }
