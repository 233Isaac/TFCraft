--- ../src_base/minecraft_server/net/minecraft/src/EntityPlayer.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src/minecraft_server/net/minecraft/src/EntityPlayer.java	0000-00-00 00:00:00.000000000 -0000
@@ -186,6 +186,7 @@
             else
             {
                 itemInUse.getItem().onUsingItemTick(itemInUse, this, itemInUseCount);
+
                 if (this.itemInUseCount <= 25 && this.itemInUseCount % 4 == 0)
                 {
                     this.updateItemUse(var1, 5);
@@ -379,6 +380,7 @@
         {
             craftingInventory.onCraftGuiClosed(this);
         }
+
         this.craftingInventory = this.inventorySlots;
     }
 
@@ -563,14 +565,17 @@
     public EntityItem dropOneItem()
     {
         ItemStack stack = inventory.getCurrentItem();
+
         if (stack == null)
         {
             return null;
         }
+
         if (stack.getItem().onDroppedByPlayer(stack, this))
         {
             return dropPlayerItemWithRandomChoice(inventory.decrStackSize(inventory.currentItem, 1), false);
         }
+
         return null;
     }
 
@@ -644,11 +649,11 @@
     {
         return getCurrentPlayerStrVsBlock(par1Block, 0);
     }
-    
+
     public float getCurrentPlayerStrVsBlock(Block par1Block, int meta)
     {
         ItemStack stack = inventory.getCurrentItem();
-        float var2 = (stack == null ? 1.0F : stack.getItem().getStrVsBlock(stack, par1Block, meta));        
+        float var2 = (stack == null ? 1.0F : stack.getItem().getStrVsBlock(stack, par1Block, meta));
         float var3 = var2;
         int var4 = EnchantmentHelper.getEfficiencyModifier(this.inventory);
 
@@ -945,10 +950,12 @@
         }
 
         par2 = ArmorProperties.ApplyArmor(this, inventory.armorInventory, par1DamageSource, par2);
+
         if (par2 <= 0)
         {
             return;
         }
+
         par2 = this.applyPotionDamageCalculations(par1DamageSource, par2);
         this.addExhaustion(par1DamageSource.getHungerDamage());
         this.health -= par2;
@@ -983,6 +990,7 @@
         {
             return;
         }
+
         if (!par1Entity.interact(this))
         {
             ItemStack var2 = this.getCurrentEquippedItem();
@@ -1048,12 +1056,14 @@
         {
             return;
         }
+
         ItemStack stack = getCurrentEquippedItem();
+
         if (stack != null && stack.getItem().onLeftClickEntity(stack, this, par1Entity))
         {
             return;
         }
-        
+
         if (par1Entity.canAttackWithItem())
         {
             int var2 = this.inventory.getDamageVsEntity(par1Entity);
@@ -1193,11 +1203,12 @@
     public EnumStatus sleepInBedAt(int par1, int par2, int par3)
     {
         EnumStatus customSleep = ForgeHooks.sleepInBedAt(this, par1, par2, par3);
+
         if (customSleep != null)
         {
             return customSleep;
         }
-        
+
         if (!this.worldObj.isRemote)
         {
             if (this.isPlayerSleeping() || !this.isEntityAlive())
@@ -1781,10 +1792,10 @@
     }
 
     public void func_50022_L() {}
-    
+
     /**
-     * Opens a Gui for the player. 
-     * 
+     * Opens a Gui for the player.
+     *
      * @param mod The mod associated with the gui
      * @param ID The ID number for the Gui
      * @param world The World
@@ -1798,25 +1809,27 @@
         {
             return;
         }
-        
+
         EntityPlayerMP player = (EntityPlayerMP)this;
 
         if (!(mod instanceof NetworkMod))
         {
             return;
         }
-        
+
         IGuiHandler handler = MinecraftForge.getGuiHandler(mod);
+
         if (handler != null)
         {
             Container container = (Container)handler.getGuiElement(ID, player, world, x, y, z);
+
             if (container != null)
             {
                 player.realGetNextWidowId();
                 player.closeCraftingGui();
                 PacketOpenGUI pkt = new PacketOpenGUI(player.getCurrentWindowIdField(), MinecraftForge.getModID((NetworkMod)mod), ID, x, y, z);
                 player.playerNetServerHandler.sendPacket(pkt.getPacket());
-                craftingInventory = container; 
+                craftingInventory = container;
                 craftingInventory.windowId = player.getCurrentWindowIdField();
                 craftingInventory.onCraftGuiOpened(player);
             }
