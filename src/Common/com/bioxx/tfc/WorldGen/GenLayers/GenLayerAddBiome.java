package com.bioxx.tfc.WorldGen.GenLayers;

import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;

import com.bioxx.tfc.Core.TFC_Core;

public class GenLayerAddBiome extends GenLayerTFC
{
	public boolean doOceanSpread;
	public GenLayerAddBiome(long par1, GenLayer par3GenLayer, boolean doOcean)
	{
		super(par1);
		this.parent = (GenLayerTFC) par3GenLayer;
		doOceanSpread = doOcean;
	}

	public GenLayerAddBiome(long par1, GenLayer par3GenLayer)
	{
		super(par1);
		this.parent = (GenLayerTFC) par3GenLayer;
		doOceanSpread = true;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
	 * amounts, or biomeList[] indices based on the particular GenLayer subclass.
	 */
	@Override
	public int[] getInts(int xCoord, int zCoord, int xSize, int zSize)
	{
		int var5 = xCoord - 1;
		int var6 = zCoord - 1;
		int var7 = xSize + 2;
		int var8 = zSize + 2;
		int[] inCache = this.parent.getInts(var5, var6, var7, var8);
		int[] outCache = IntCache.getIntCache(xSize * zSize);

		for (int z = 0; z < zSize; ++z)
		{
			for (int x = 0; x < xSize; ++x)
			{
				int id0 = inCache[x + 0 + (z + 0) * var7];
				int id1 = inCache[x + 2 + (z + 0) * var7];
				int id2 = inCache[x + 0 + (z + 2) * var7];
				int id3 = inCache[x + 2 + (z + 2) * var7];
				int thisID = inCache[x + 1 + (z + 1) * var7];
				this.initChunkSeed(x + xCoord, z + zCoord);
				int index = x + z * xSize;

				if (thisID == 0 && (id0 != 0 || id1 != 0 || id2 != 0 || id3 != 0))
				{
					int count = 1;
					int outID = 0;

					if (!TFC_Core.isOceanicBiome(id0) && this.nextInt(count++) == 0)
						outID = id0;

					if (!TFC_Core.isOceanicBiome(id1) && this.nextInt(count++) == 0)
						outID = id1;

					if (!TFC_Core.isOceanicBiome(id2) && this.nextInt(count++) == 0)
						outID = id2;

					if (!TFC_Core.isOceanicBiome(id3) && this.nextInt(count++) == 0)
						outID = id3;

					if (this.nextInt(3) == 0)
						outCache[index] = outID;
					else
						outCache[index] = 0;
				}
				else if (thisID > 0 && (id0 == 0 || id1 == 0 || id2 == 0 || id3 == 0) && doOceanSpread)
				{
					if (this.nextInt(5) == 0)
						outCache[index] = 0;
					else
						outCache[index] = thisID;
				}
				else
				{
					outCache[index] = thisID;
				}
			}
		}
		return outCache;
	}
}
