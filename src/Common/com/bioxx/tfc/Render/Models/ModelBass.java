// Date: 09/05/2014 12:20:25 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package com.bioxx.tfc.Render.Models;

import com.bioxx.tfc.Core.TFC_Time;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelBass extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer Mouth;
    ModelRenderer Gils;
    ModelRenderer Neck;
    ModelRenderer Body;
    ModelRenderer Back;
    ModelRenderer Rear;
    ModelRenderer Tail;
    ModelRenderer TailEnd;
    ModelRenderer TailFin;
    ModelRenderer DorsalFin;
    ModelRenderer AnalFin;
    ModelRenderer PelvicFinBox;
    ModelRenderer PectoralFinBox;
    
    long n;
    float rotateMouth;
    float rotateSwim;
  
  public ModelBass()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Head = new ModelRenderer(this, 0, 0);
      Head.addBox(-2.5F, 0F, 0F, 5, 5, 4);
      Head.setRotationPoint(0F, 0F, 0F);
      Head.setTextureSize(128, 64);
      Head.mirror = true;
      setRotation(Head, 0.5235988F, 0F, 0F);
      Mouth = new ModelRenderer(this, 24, 0);
      Mouth.addBox(-2F, -1F, -5F, 4, 1, 6);
      Mouth.setRotationPoint(0F, 4F, 4F);
      Mouth.setTextureSize(128, 64);
      Mouth.mirror = true;
      setRotation(Mouth, -0.2617994F, 0F, 0F);
      Gils = new ModelRenderer(this, 64, 0);
      Gils.addBox(-3F, 2F, 2F, 6, 4, 5);
      Gils.setRotationPoint(0F, 0F, 0F);
      Gils.setTextureSize(128, 64);
      Gils.mirror = true;
      setRotation(Gils, 0.5235988F, 0F, 0F);
      Neck = new ModelRenderer(this, 44, 0);
      Neck.addBox(-2F, -1.2F, 3.5F, 4, 2, 6);
      Neck.setRotationPoint(0F, 0F, 0F);
      Neck.setTextureSize(128, 64);
      Neck.mirror = true;
      setRotation(Neck, 0.1745329F, 0F, 0F);
      Body = new ModelRenderer(this, 0, 17);
      Body.addBox(-2.5F, -1.5F, 5F, 5, 6, 10);
      Body.setRotationPoint(0F, 0F, 0F);
      Body.setTextureSize(128, 64);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Back = new ModelRenderer(this, 30, 17);
      Back.addBox(-2F, -3.3F, 9F, 4, 3, 7);
      Back.setRotationPoint(0F, 0F, 0F);
      Back.setTextureSize(128, 64);
      Back.mirror = true;
      setRotation(Back, -0.0523599F, 0F, 0F);
      Rear = new ModelRenderer(this, 0, 33);
      Rear.addBox(-2F, 5.4F, 12.9F, 4, 3, 4);
      Rear.setRotationPoint(0F, 0F, 0F);
      Rear.setTextureSize(128, 64);
      Rear.mirror = true;
      setRotation(Rear, 0.2792527F, 0F, 0F);
      Tail = new ModelRenderer(this, 16, 33);
      Tail.addBox(-1.5F, -11F, 12.3F, 3, 4, 5);
      Tail.setRotationPoint(0F, 1F, 0F);
      Tail.setTextureSize(128, 64);
      Tail.mirror = true;
      setRotation(Tail, -0.5235988F, 0F, 0F);
      TailEnd = new ModelRenderer(this, 32, 33);
      TailEnd.addBox(-1F, -0.5F, 0F, 2, 3, 5);
      TailEnd.setRotationPoint(0F, 0F, 19F);
      TailEnd.setTextureSize(128, 64);
      TailEnd.mirror = true;
      setRotation(TailEnd, 0F, 0F, 0F);
      TailFin = new ModelRenderer(this, 0, 51);
      TailFin.addBox(0F, -2.5F, 0F, 0, 7, 6);
      TailFin.setRotationPoint(0F, 0F, 4F);
      TailFin.setTextureSize(128, 64);
      TailFin.mirror = true;
      setRotation(TailFin, 0F, 0F, 0F);
      TailEnd.addChild(TailFin);
      DorsalFin = new ModelRenderer(this, 12, 47);
      DorsalFin.addBox(0F, -8.5F, 8F, 0, 5, 12);
      DorsalFin.setRotationPoint(0F, 0F, 0F);
      DorsalFin.setTextureSize(128, 64);
      DorsalFin.mirror = true;
      setRotation(DorsalFin, -0.0872665F, 0F, 0F);
      AnalFin = new ModelRenderer(this, 36, 55);
      AnalFin.addBox(0F, 10F, 12F, 0, 4, 5);
      AnalFin.setRotationPoint(0F, 0F, 0F);
      AnalFin.setTextureSize(128, 64);
      AnalFin.mirror = true;
      setRotation(AnalFin, 0.4363323F, 0F, 0F);
      PelvicFinBox = new ModelRenderer(this, 53, 33);
      PelvicFinBox.addBox(-1.5F, -1F, 8F, 3, 2, 4);
      PelvicFinBox.setRotationPoint(0F, 0F, 0F);
      PelvicFinBox.setTextureSize(128, 64);
      PelvicFinBox.mirror = true;
      setRotation(PelvicFinBox, -0.5235988F, 0F, 0F);
      PectoralFinBox = new ModelRenderer(this, 67, 33);
      PectoralFinBox.addBox(-3F, 4.4F, 6.7F, 6, 2, 4);
      PectoralFinBox.setRotationPoint(0F, 0F, 0F);
      PectoralFinBox.setTextureSize(128, 64);
      PectoralFinBox.mirror = true;
      setRotation(PectoralFinBox, 0.2617994F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    Head.render(f5);
    Mouth.render(f5);
    Gils.render(f5);
    Neck.render(f5);
    Body.render(f5);
    Back.render(f5);
    Rear.render(f5);
    Tail.render(f5);
    TailEnd.render(f5);
    //TailFin.render(f5);
    DorsalFin.render(f5);
    AnalFin.render(f5);
    PelvicFinBox.render(f5);
    PectoralFinBox.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  @Override
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    
   	n = (TFC_Time.getTotalTicks() % 30);
   	rotateMouth = (n)*(n - 30)*(0.0044f * 0.5f);
   	rotateSwim = (n)*(n - 30)*(-0.0044f);
   	
    setRotation(Mouth, -0.2617994F + (-0.2617994F *rotateMouth), 0F, 0F);
    
    if(entity.isInWater() || entity.isAirBorne){
    	setRotation(TailEnd, 0F, -0.2617994F + (0.2617994F * rotateSwim * (entity.isAirBorne?4:2)), 0F);
    	setRotation(TailFin, 0F, -0.2617994F + (0.2617994F * rotateSwim * (entity.isAirBorne?4:2)), 0F);
    }
    else{
    	setRotation(TailEnd, 0F, 0F, 0F);
    	setRotation(TailFin, 0F, 0F, 0F);
    }
  }

}
