package net.minecraft.src;

public class GenLayerBiomeTFC extends GenLayer
{
	public static BiomeGenBase[] biomeArray = new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.plains, BiomeGenBase.taiga,
		BiomeGenBase.desert3,BiomeGenBase.desert4,BiomeGenBase.desert5,BiomeGenBase.desert6,
		BiomeGenBase.desert7,BiomeGenBase.desert8, BiomeGenBase.desert2,BiomeGenBase.desert9,
		BiomeGenBase.hills2,BiomeGenBase.hills3,BiomeGenBase.hills4,
		BiomeGenBase.hills5,BiomeGenBase.hills6,BiomeGenBase.hills7,
		BiomeGenBase.hills8,BiomeGenBase.hills9,BiomeGenBase.hills10,
		BiomeGenBase.forest2,BiomeGenBase.forest3,BiomeGenBase.forest4,BiomeGenBase.forest5,BiomeGenBase.forest6,BiomeGenBase.forest7,BiomeGenBase.forest8,BiomeGenBase.forest9,
		BiomeGenBase.plains2,BiomeGenBase.plains3,BiomeGenBase.plains4,BiomeGenBase.plains5,BiomeGenBase.plains6,BiomeGenBase.plains7,BiomeGenBase.plains8,BiomeGenBase.plains9,BiomeGenBase.plains10,
		BiomeGenBase.taiga2,BiomeGenBase.taiga3,BiomeGenBase.taiga4,BiomeGenBase.taiga5,BiomeGenBase.taiga6,BiomeGenBase.taiga7,BiomeGenBase.taiga8,BiomeGenBase.taiga9,BiomeGenBase.taiga10,
		BiomeGenBase.swamp2,BiomeGenBase.swamp3,BiomeGenBase.swamp4,BiomeGenBase.swamp5,BiomeGenBase.swamp6,BiomeGenBase.swamp7,BiomeGenBase.swamp8,BiomeGenBase.swamp9,BiomeGenBase.swamp10,
		BiomeGenBase.jungle, BiomeGenBase.jungleHills};

	/** this sets all the biomes that are allowed to appear in the overworld */
	private BiomeGenBase[] allowedBiomes;

	public GenLayerBiomeTFC(long par1, GenLayer par3GenLayer, WorldType par4WorldType)
	{
		super(par1);
		this.allowedBiomes = biomeArray;
		this.parent = par3GenLayer;

		if (par4WorldType == WorldType.DEFAULT_1_1)
		{
			this.allowedBiomes = new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.plains, BiomeGenBase.taiga};
		}
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
	 * amounts, or biomeList[] indices based on the particular GenLayer subclass.
	 */
	public int[] getInts(int par1, int par2, int par3, int par4)
	{
		int[] var5 = this.parent.getInts(par1, par2, par3, par4);
		int[] var6 = IntCache.getIntCache(par3 * par4);

		for (int var7 = 0; var7 < par4; ++var7)
		{
			for (int var8 = 0; var8 < par3; ++var8)
			{
				this.initChunkSeed((long)(var8 + par1), (long)(var7 + par2));
				int var9 = var5[var8 + var7 * par3];

				if (var9 == 0)
				{
					var6[var8 + var7 * par3] = 0;
				}
				else if (var9 == BiomeGenBase.mushroomIsland.biomeID)
				{
					var6[var8 + var7 * par3] = var9;
				}
				else if (var9 == 1)
				{
					var6[var8 + var7 * par3] = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;
				}
				else
				{
					var6[var8 + var7 * par3] = BiomeGenBase.icePlains.biomeID;
				}
			}
		}

		return var6;
	}
}
